package ${packageName}.service;

import ${packageName}.domain.${ClassName};
#if($isUseBO && ($isUseAddMethod || $isUseEditMethod || !$isUseQuery))
#set($bo="${ClassName}Bo")
#set($boObjName="bo")
import ${packageName}.domain.bo.${ClassName}Bo;
#else
#set($bo=$ClassName)
#set($boObjName="${className}")
#end
#if($isUseQuery && ($isUseQueryMethod || $isUseExportMethod))
#set($query="${ClassName}Query")
import ${packageName}.domain.query.${ClassName}Query;
#else
#set($query=$bo)
#end
#if($isUseVO && ($isUseQueryMethod || $isUseDetailMethod || $isUseEditMethod || $isUseExportMethod))
#set($vo="${ClassName}Vo")
import ${packageName}.domain.vo.${ClassName}Vo;
#else
#set($vo=$ClassName)
#end
import com.baomidou.mybatisplus.extension.service.IService;
#if($table.isCrud() && $isUseQueryMethod)
import org.dromara.common.mybatis.core.page.TableDataInfo;
#end

#if($isUseRemoveMethod)
import java.util.Collection;
#end
#if($isUseExportMethod || ($isUseQueryMethod && $table.isTree()))
import java.util.List;
#end

/**
 * ${functionName}Service接口
 *
 * @author ${author}
 * @date ${datetime}
 */
public interface I${ClassName}Service extends IService<${ClassName}> {
#if($isUseDetailMethod || $isUseEditMethod)

    /**
     * 查询${functionName}
     *
     * @param ${pkColumn.javaField} 主键
     * @return ${vo}
     */
    ${vo} queryById(${pkColumn.javaType} ${pkColumn.javaField});
#end
#if($isUseQueryMethod && $table.isCrud())

    /**
     * 查询${functionName}列表
     *
     * @param query 查询对象
     * @return ${vo}
     */
    TableDataInfo<${vo}> queryPageList(${query} query);
#end
#if($isUseExportMethod || ($isUseQueryMethod && $table.isTree()))

    /**
     * 查询${functionName}列表
     *
     * @param query 查询对象
     * @return ${vo}
     */
    List<${vo}> queryList(${query} query);
#end
#if($isUseAddMethod)

    /**
     * 新增${functionName}
     *
     * @param $boObjName ${functionName}新增业务对象
     * @return Boolean
     */
    Boolean insertByBo(${bo} $boObjName);
#end
#if($isUseEditMethod)

    /**
     * 修改${functionName}
     *
     * @param $boObjName ${functionName}编辑业务对象
     * @return Boolean
     */
    Boolean updateByBo(${bo} $boObjName);
#end
#if($isUseRemoveMethod)

    /**
     * 校验并批量删除${functionName}信息
     *
     * @param ids 主键集合
     * @return Boolean
     */
    Boolean deleteWithValidByIds(Collection<${pkColumn.javaType}> ids);
#end
}
