#set($addOrUpdate = ($isUseAddMethod || $isUseEditMethod))
#if($isUseVO)
#set($vo="${ClassName}Vo")
#else
#set($vo=$ClassName)
#end
#if($isUseBO)
#set($bo="${ClassName}Form")
#else
#set($bo=$ClassName)
#end
#if($isUseQuery)
#set($query="${ClassName}Query")
#else
#set($query=$bo)
#end
#if($table.isCrud())
#set($Result="TableDataInfo<$vo>")
import type { R, TableDataInfo } from '@/api/model/resultModel';
#elseif($table.isTree())
#set($Result="R<Array<$vo>>")
import type { R } from '@/api/model/resultModel';
#end
#set($idType=${GenUtil.javaTypeToTypescript(${pkColumn.javaType})})
#set($importApiModel = [])
#if((!$isUseBO && $addOrUpdate || (!$isUseQuery && !$isUseBO) || !$isUseVO) && $importApiModel.add(${ClassName}))#end
#if($isUseBO && ($addOrUpdate  || !$isUseQuery) && $importApiModel.add($bo))#end
#if($isUseQuery && $isUseQueryMethod && $importApiModel.add(${query}))#end
#if($isUseVO && ($isUseQueryMethod || $isUseDetailMethod || $isUseEditMethod) && $importApiModel.add(${vo}))#end
#if(!$importApiModel.isEmpty())
import type { $StringUtils.join($importApiModel, ", ") } from '@/api/${moduleName}/model/${businessName}Model';
#end
import { request } from '@/utils/request';
#if($isUseQueryMethod)

// 查询${functionName}列表
export function list${BusinessName}(query?: ${query}) {
  return request.get<$Result>({
    url: '/${moduleName}/${businessName}/list',
    params: query,
  });
}
#end
#if($isUseDetailMethod || $isUseEditMethod)

// 查询${functionName}详细
export function get${BusinessName}(${pkColumn.javaField}: $idType) {
  return request.get<R<${vo}>>({
    url: `/${moduleName}/${businessName}/${${pkColumn.javaField}}`,
  });
}
#end
#if($isUseAddMethod)

// 新增${functionName}
export function add${BusinessName}(data: ${bo}) {
  return request.post<R<void>>({
    url: '/${moduleName}/${businessName}',
    data,
  });
}
#end
#if($isUseEditMethod)

// 修改${functionName}
export function update${BusinessName}(data: ${bo}) {
  return request.put<R<void>>({
    url: '/${moduleName}/${businessName}',
    data,
  });
}
#end
#if($isUseRemoveMethod)

// 删除${functionName}
export function del${BusinessName}(${pkColumn.javaField}s: $idType | Array<$idType>) {
  return request.delete<R<void>>({
    url: `/${moduleName}/${businessName}/${${pkColumn.javaField}s}`,
  });
}
#end
