<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dromara.system.mapper.SysUserMapper">

    <resultMap id="SysUserResult" autoMapping="true" type="org.dromara.system.domain.vo.SysUserVo">
        <id property="userId" column="user_id"/>
        <result property="deptId" column="dept_id"/>
        <association property="dept" column="dept_id" javaType="org.dromara.system.domain.SysDept" resultMap="deptResult"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap autoMapping="true" id="deptResult" type="org.dromara.system.domain.vo.SysDeptVo">
        <id property="deptId" column="dept_id"/>
        <result property="email" column="dept_email"/>
        <result property="status" column="dept_status"/>
        <result property="createTime" column="dept_create_time"/>
    </resultMap>

    <resultMap autoMapping="true" id="RoleResult" type="org.dromara.system.domain.vo.SysRoleVo">
        <id property="roleId" column="role_id"/>
        <result property="status" column="role_status"/>
        <result property="createTime" column="role_create_time"/>
    </resultMap>

    <sql id="selectUserVo">
        select u.user_id,
               u.tenant_id,
               u.dept_id,
               u.user_name,
               u.nick_name,
               u.user_type,
               u.email,
               u.avatar,
               u.phonenumber,
               u.password,
               u.sex,
               u.status,
               u.del_flag,
               u.login_ip,
               u.login_date,
               u.create_by,
               u.update_time,
               u.create_time,
               u.remark,
               d.dept_id,
               d.parent_id,
               d.ancestors,
               d.dept_name,
               d.order_num,
               d.leader,
               d.status as dept_status,
               d.email as dept_email,
               d.create_time as dept_cteate_time,
               r.role_id,
               r.role_name,
               r.role_key,
               r.role_sort,
               r.data_scope,
               r.status as role_status
        from sys_user u
            left join sys_dept d on u.dept_id = d.dept_id
            left join sys_user_role sur on u.user_id = sur.user_id
            left join sys_role r on r.role_id = sur.role_id
    </sql>

    <sql id="selectSysUserVo">
        select su.user_id, su.dept_id, su.user_name, su.nick_name, su.user_type, su.email, su.phonenumber, su.sex, su.avatar, su.password, su.status, su.del_flag, su.login_ip, su.login_date, su.create_by, su.create_time, su.update_by, su.update_time, su.remark from sys_user su
    </sql>
    <select id="queryList" parameterType="org.dromara.system.domain.query.SysUserQuery" resultMap="SysUserResult">
        select su.user_id,
               su.dept_id,
               su.nick_name,
               su.user_name,
               su.email,
               su.avatar,
               su.phonenumber,
               su.sex,
               su.status,
               su.del_flag,
               su.login_ip,
               su.login_date,
               su.create_by,
               su.update_time,
               su.create_time,
               su.remark,
               sd.dept_name,
               sd.leader,
               (select u1.user_name from sys_user u1 where u1.user_id = sd.leader) as leaderName
        from sys_user su
                 left join sys_dept sd on su.dept_id = sd.dept_id
        <where>
            and su.del_flag = '0'
            <if test="userId != null "> and su.user_id = #{userId}</if>
            <if test="deptIds != null and deptIds.length != 0">
                and su.dept_id in
                <foreach collection="deptIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="userName != null and userName != ''"> and su.user_name like concat(concat('%', #{userName}), '%')</if>
            <if test="email != null and email != ''"> and su.email like concat(concat('%', #{email}), '%')</if>
            <if test="phonenumber != null and phonenumber != ''"> and su.phonenumber like concat(concat('%', #{phonenumber}), '%')</if>
            <if test="status != null and status != ''"> and su.status = #{status}</if>
            <if test="params.beginTime != null and params.endTime != null">and su.create_time between #{params.beginTime} and #{params.endTime}</if>
        </where>
        order by su.create_time desc
    </select>

    <select id="selectAllocatedList" resultMap="SysUserResult">
        select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
        from sys_user u
             left join sys_dept d on u.dept_id = d.dept_id
             left join sys_user_role sur on u.user_id = sur.user_id
             left join sys_role r on r.role_id = sur.role_id
        <where>
            and u.del_flag = '0'
            <if test="roleId != null "> and r.role_id = #{roleId}</if>
            <if test="userName != null and userName != ''"> and u.user_name like concat(concat('%', #{userName}), '%')</if>
            <if test="phonenumber != null and phonenumber != ''"> and u.phonenumber like concat(concat('%', #{phonenumber}), '%')</if>
            <if test="status != null and status != ''"> and u.status = #{status}</if>
        </where>
        order by u.create_time desc
    </select>

    <select id="selectUnallocatedList" resultMap="SysUserResult">
        select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
        from sys_user u
             left join sys_dept d on u.dept_id = d.dept_id
             left join sys_user_role sur on u.user_id = sur.user_id
             left join sys_role r on r.role_id = sur.role_id
        <where>
            and u.del_flag = '0' and (r.role_id != #{roleId} or sur.role_id is null)
            <foreach collection="userIds" item="item" open="and u.user_id not in(" separator="," close=")" nullable="true">
                #{item}
            </foreach>
            <if test="userName != null and userName != ''"> and u.user_name like concat(concat('%', #{userName}), '%')</if>
            <if test="phonenumber != null and phonenumber != ''"> and u.phonenumber like concat(concat('%', #{phonenumber}), '%')</if>
        </where>
        order by u.user_id
    </select>

    <select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.del_flag = '0' and u.user_name = #{userName}
    </select>

    <select id="selectUserByPhonenumber" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.del_flag = '0' and u.phonenumber = #{phonenumber}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.del_flag = '0' and u.email = #{email}
    </select>

    <select id="selectSafeUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.del_flag = '0' and u.user_id = #{userId}
    </select>
    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.del_flag = '0' and u.user_id = #{userId}
    </select>


</mapper>
